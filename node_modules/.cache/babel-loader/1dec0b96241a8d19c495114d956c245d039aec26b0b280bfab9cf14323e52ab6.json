{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createApp } from 'vue';\nimport App from './App.vue';\nimport './registerServiceWorker';\nimport router from './router';\nimport { VueSignaturePad } from 'vue-signature-pad';\nimport axios from \"axios\";\nimport { get, keys, del, set, entries } from 'idb-keyval';\nlet app = createApp(App);\napp.config.globalProperties.currIp = 'https://ns3359877.ip-37-187-97.eu';\napp.component(\"VueSignaturePad\", VueSignaturePad);\napp.use(router).mount('#app');\nasync function checkDP() {\n  let current_tech = await get('current_tech');\n  if (typeof current_tech == 'undefined') {\n    console.log('No tech ID. Please Log in.');\n  } else {\n    const sendGetRequest = async () => {\n      try {\n        const response = await axios.get('https://ns3359877.ip-37-187-97.eu/my_missions?tech_id=' + current_tech);\n        this.resp = response.data;\n\n        //del old tasks\n\n        const ks = await keys();\n        var task_tab = [];\n        for (const k of ks) {\n          if (k.includes(\"-task\")) {\n            task_tab.push(k);\n            del(k);\n          }\n        }\n        console.log(task_tab);\n        this.resp.forEach(async function (element) {\n          var id = element.Item_id;\n          var type = element.Item_type;\n          element = JSON.stringify(element);\n          var data = JSON.parse(element);\n          var name = type + '-' + id + '-task';\n          if (!task_tab.includes(name) && type == \"DP\") {\n            navigator.serviceWorker.register('service-worker.js');\n            if (Notification.permission === \"granted\") {\n              navigator.serviceWorker.ready.then(function (registration) {\n                registration.showNotification('titre exemple', {\n                  body: 'body exemple',\n                  icon: './assets/logo-gereco.svg',\n                  tag: 'tag exemple'\n                });\n              });\n            } else {\n              // We need to ask the user for permission\n              Notification.requestPermission().then(permission => {\n                console.log(permission);\n                if (permission === \"granted\") {\n                  navigator.serviceWorker.ready.then(function (registration) {\n                    registration.showNotification('titre exemple', {\n                      body: 'body exemple',\n                      icon: './assets/logo-gereco.svg',\n                      tag: 'tag exemple'\n                    });\n                  });\n                }\n              });\n            }\n          }\n\n          //set new tasks\n          await set(name, data);\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    await sendGetRequest();\n\n    // get tasks from cache\n    var data_tasks = [];\n    var cache_entries = await entries();\n    for (var i = 0; i <= cache_entries.length - 1; i++) {\n      if (cache_entries[i][0].toString().includes(\"-task\")) {\n        //add formated_date\n        var dateParts = cache_entries[i][1][\"Evt_dtDebut\"].split(\" \");\n        dateParts = dateParts[1].split(\"/\");\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n        cache_entries[i][1][\"unix_date\"] = Date.parse(dateObject);\n        data_tasks.push(cache_entries[i][1]);\n      }\n    }\n    console.log(data_tasks);\n    data_tasks.sort(function (a, b) {\n      return a[\"unix_date\"] - b[\"unix_date\"];\n    });\n    this.data_tasks = data_tasks;\n  }\n}\nsetInterval(checkDP, 4000);\n\n// async function test() {\n// \tconst registration = await navigator.serviceWorker.ready;\n\n// \tif(\"periodicSync\" in registration) {\n// \t\t// Background Periodic Sync functionality\n// \t\tconst periodicSync = registration.periodicSync;\n// \t\tconsole.log(registration);\n// \t}\n// }\n// test();","map":{"version":3,"names":["createApp","App","router","VueSignaturePad","axios","get","keys","del","set","entries","app","config","globalProperties","currIp","component","use","mount","checkDP","current_tech","console","log","sendGetRequest","response","resp","data","ks","task_tab","k","includes","push","forEach","element","id","Item_id","type","Item_type","JSON","stringify","parse","name","navigator","serviceWorker","register","Notification","permission","ready","then","registration","showNotification","body","icon","tag","requestPermission","err","error","data_tasks","cache_entries","i","length","toString","dateParts","split","dateObject","Date","sort","a","b","setInterval"],"sources":["/Users/antoinelucas/Sites/1PBrocoli/gereco/wpa-gereco/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\nimport App from './App.vue'\nimport './registerServiceWorker'\nimport router from './router'\nimport { VueSignaturePad } from 'vue-signature-pad';\nimport axios from \"axios\"\nimport { get, keys, del, set, entries } from 'idb-keyval';\n\n\nlet app = createApp(App)\napp.config.globalProperties.currIp = 'https://ns3359877.ip-37-187-97.eu'\napp.component(\"VueSignaturePad\", VueSignaturePad);\napp.use(router).mount('#app')\n\nasync function checkDP() {\n\n\tlet current_tech = await get('current_tech');\n    if (typeof current_tech == 'undefined') {\n        console.log('No tech ID. Please Log in.');\n    } else {\n        const sendGetRequest = async () => {\n            try {\n                const response = await axios.get('https://ns3359877.ip-37-187-97.eu/my_missions?tech_id='+current_tech);\n                this.resp = response.data;\n\n                //del old tasks\n\n                const ks = await keys();\n                var task_tab = [];\n                for (const k of ks) {\n                    if (k.includes(\"-task\")) {\n                        task_tab.push(k);\n                        del(k);\n                    }\n                }\n                console.log(task_tab);\n\n                this.resp.forEach(async function(element) {\n                    var id = element.Item_id;\n                    var type = element.Item_type;\n                    element = JSON.stringify(element);\n                    var data = JSON.parse(element);\n                    var name = type+'-'+id+'-task';\n                    if(!task_tab.includes(name) && type == \"DP\") {\n\t\t\t\t\t\tnavigator.serviceWorker.register('service-worker.js');\n\t\t\t\t\t\tif (Notification.permission === \"granted\") {\n\t\t\t\t\t\t\tnavigator.serviceWorker.ready.then(function(registration) {\n\t\t\t\t\t\t\t\tregistration.showNotification('titre exemple', {\n\t\t\t\t\t\t\t\t\tbody: 'body exemple',\n\t\t\t\t\t\t\t\t\ticon: './assets/logo-gereco.svg',\n\t\t\t\t\t\t\t\t\ttag: 'tag exemple'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// We need to ask the user for permission\n\t\t\t\t\t\t\tNotification.requestPermission().then((permission) => {\n\t\t\t\t\t\t\t\tconsole.log(permission);\n\t\t\t\t\t\t\t\tif (permission === \"granted\") {\n\t\t\t\t\t\t\t\t\tnavigator.serviceWorker.ready.then(function(registration) {\n\t\t\t\t\t\t\t\t\t\tregistration.showNotification('titre exemple', {\n\t\t\t\t\t\t\t\t\t\t\tbody: 'body exemple',\n\t\t\t\t\t\t\t\t\t\t\ticon: './assets/logo-gereco.svg',\n\t\t\t\t\t\t\t\t\t\t\ttag: 'tag exemple'\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n                    }\n\n                    //set new tasks\n                    await set(name, data);\n                });\n            } catch (err) {\n                console.error(err);\n            }\n        };\n        await sendGetRequest();\n\n        // get tasks from cache\n        var data_tasks = [];\n        var cache_entries = await entries();\n        for (var i = 0; i <= cache_entries.length - 1; i++) {\n            if (cache_entries[i][0].toString().includes(\"-task\")) {\n\n                //add formated_date\n                var dateParts = cache_entries[i][1][\"Evt_dtDebut\"].split(\" \");\n                dateParts = dateParts[1].split(\"/\");\n                var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n                cache_entries[i][1][\"unix_date\"] = Date.parse(dateObject);\n                data_tasks.push(cache_entries[i][1]);\n            }\n        }\n        \n        console.log(data_tasks);\n        data_tasks.sort(function(a,b){return a[\"unix_date\"] - b[\"unix_date\"]});\n        this.data_tasks = data_tasks;\n    }\n\n}\nsetInterval(checkDP, 4000);\n\n\n// async function test() {\n// \tconst registration = await navigator.serviceWorker.ready;\n\n// \tif(\"periodicSync\" in registration) {\n// \t\t// Background Periodic Sync functionality\n// \t\tconst periodicSync = registration.periodicSync;\n// \t\tconsole.log(registration);\n// \t}\n// }\n// test();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}