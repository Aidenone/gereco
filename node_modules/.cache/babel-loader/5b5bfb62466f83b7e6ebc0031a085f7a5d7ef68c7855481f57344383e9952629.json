{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Nom\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Prénom\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Adresse\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Actions\")])], -1 /* HOISTED */);\nconst _hoisted_2 = [\"onUpdate:modelValue\"];\nconst _hoisted_3 = [\"onUpdate:modelValue\"];\nconst _hoisted_4 = [\"onUpdate:modelValue\"];\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Envoyer\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_createElementVNode(\"table\", null, [_hoisted_1, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.formData, (item, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": $event => item.name = $event\n    }, null, 8 /* PROPS */, _hoisted_2), [[_vModelText, item.name]])]), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": $event => item.firstName = $event\n    }, null, 8 /* PROPS */, _hoisted_3), [[_vModelText, item.firstName]])]), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": $event => item.address = $event\n    }, null, 8 /* PROPS */, _hoisted_4), [[_vModelText, item.address]])]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.removeItem(index)\n    }, \"Supprimer\", 8 /* PROPS */, _hoisted_5)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.addItem && $options.addItem(...args))\n  }, \"Ajouter une ligne\"), _hoisted_6])], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"mappings":";gCAIGA,oBAOQ,6BANPA,oBAKK,0BAJJA,oBAAY,YAAR,KAAG,gBACPA,oBAAe,YAAX,QAAM,gBACVA,oBAAgB,YAAZ,SAAO,gBACXA,oBAAgB,YAAZ,SAAO;;;;;gCAedA,oBAAsC;EAA9BC,IAAI,EAAC;AAAQ,GAAC,SAAO;;;uBAvB/BC,oBAyBO;IAzBAC,QAAM,wDAAUC,mDAAU;MAChCJ,oBAuBM,cAtBLA,oBAmBQ,gBAlBPK,UAOQ,EACRL,oBASQ,mCARPE,oBAOKI,6BAPuBC,cAAQ,GAAxBC,IAAI,EAAEC,KAAK;yBAAvBP,oBAOK;MAPkCQ,GAAG,EAAED;IAAK,IAChDT,oBAAkD,6BAA9CA,oBAAyC;MAAlCC,IAAI,EAAC,MAAM;uCAAUO,IAAI,CAACG,IAAI;wDAATH,IAAI,CAACG,IAAI,OACzCX,oBAAuD,6BAAnDA,oBAA8C;MAAvCC,IAAI,EAAC,MAAM;uCAAUO,IAAI,CAACI,SAAS;wDAAdJ,IAAI,CAACI,SAAS,OAC9CZ,oBAAqD,6BAAjDA,oBAA4C;MAArCC,IAAI,EAAC,MAAM;uCAAUO,IAAI,CAACK,OAAO;wDAAZL,IAAI,CAACK,OAAO,OAC5Cb,oBAEK,aADLA,oBAAqD;MAA5Cc,OAAK,YAAEV,mBAAU,CAACK,KAAK;OAAG,WAAS;sCAK/CT,oBAAmD;IAA1Cc,OAAK,yCAAEV,6CAAO;KAAE,mBAAiB,GAC1CW,UAAsC","names":["_createElementVNode","type","_createElementBlock","onSubmit","$options","_hoisted_1","_Fragment","$data","item","index","key","name","firstName","address","onClick","_hoisted_6"],"sourceRoot":"","sources":["/Users/antoinelucas/Sites/1PBrocoli/gereco/wpa-gereco/src/components/IDBTest.vue"],"sourcesContent":["<template>\n<form @submit.prevent=\"submitForm\">\n\t<div>\n\t\t<table>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Nom</th>\n\t\t\t\t\t<th>Prénom</th>\n\t\t\t\t\t<th>Adresse</th>\n\t\t\t\t\t<th>Actions</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr v-for=\"(item, index) in formData\" :key=\"index\">\n\t\t\t\t\t<td><input type=\"text\" v-model=\"item.name\" /></td>\n\t\t\t\t\t<td><input type=\"text\" v-model=\"item.firstName\" /></td>\n\t\t\t\t\t<td><input type=\"text\" v-model=\"item.address\" /></td>\n\t\t\t\t\t<td>\n\t\t\t\t\t<button @click=\"removeItem(index)\">Supprimer</button>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t\t<button @click=\"addItem\">Ajouter une ligne</button>\n\t\t<button type=\"submit\">Envoyer</button>\n\t</div>\n</form>\n</template>\n\n<script>\nimport { set, get } from 'idb-keyval';\n\nexport default {\n  name: 'IDBTest',\n  data() {\n    return {\n      formData: {\n        name: '',\n        firstName: '',\n        address: ''\n      },\n    };\n  },\n  mounted() {\n    this.getFormData();\n    window.addEventListener('beforeunload', this.saveFormData);\n  },\n  beforeUnmount() {\n    window.removeEventListener('beforeunload', this.saveFormData);\n  },\n  methods: {\n    async saveFormData() {\n\t\t//Data from table + form\n\t\tvar result = this.formData;\n\t\t//To avoid cloning error\n\t\tresult = JSON.stringify(result);\n\t\tvar test = JSON.parse(result);\n\n\t\tawait set('VG-xxx-2', test);\n    },\n    async getFormData() {\n      const savedData = await get('VG-xxx-2');\n      if (savedData) {\n        this.formData = savedData;\n      }\n    },\n    submitForm() {\n\t\tthis.getFormData();\n    },\n    addItem() {\n\t\tconsole.log(this.formData);\n\t\tthis.formData.push({ name: \"\", firstName: \"\", address: \"\" });\n    },\n    removeItem(index) {\n\t\tthis.formData.splice(index, 1);\n    },\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}