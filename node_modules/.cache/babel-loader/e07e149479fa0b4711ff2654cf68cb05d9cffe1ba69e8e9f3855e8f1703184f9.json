{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport './registerServiceWorker';\nimport router from './router';\nimport { VueSignaturePad } from 'vue-signature-pad';\nlet app = createApp(App);\napp.config.globalProperties.currIp = 'https://ns3359877.ip-37-187-97.eu';\napp.component(\"VueSignaturePad\", VueSignaturePad);\napp.use(router).mount('#app');\nfunction checkDP() {\n  // Notification.requestPermission().then((permission) => {\n  //        console.log(permission);\n  //        if (permission === \"granted\") {\n  //            const notification = new Notification(\"Test\", { body: \"test notif\" });\n  //            console.log(notification);\n  //        }\n  //    });\n\n  navigator.serviceWorker.register('service-worker.js');\n  if (Notification.permission === \"granted\") {\n    navigator.serviceWorker.ready.then(function (registration) {\n      registration.showNotification('Notification with ServiceWorker');\n    });\n  } else {\n    // We need to ask the user for permission\n    Notification.requestPermission().then(permission => {\n      console.log(permission);\n      if (permission === \"granted\") {\n        navigator.serviceWorker.ready.then(function (registration) {\n          registration.showNotification('Notification with ServiceWorker');\n        });\n      }\n    });\n  }\n}\nsetInterval(checkDP, 4000);\n\n// async function test() {\n// \tconst registration = await navigator.serviceWorker.ready;\n\n// \tif(\"periodicSync\" in registration) {\n// \t\t// Background Periodic Sync functionality\n// \t\tconst periodicSync = registration.periodicSync;\n// \t\tconsole.log(registration);\n// \t}\n// }\n// test();","map":{"version":3,"names":["createApp","App","router","VueSignaturePad","app","config","globalProperties","currIp","component","use","mount","checkDP","navigator","serviceWorker","register","Notification","permission","ready","then","registration","showNotification","requestPermission","console","log","setInterval"],"sources":["/Users/antoinelucas/Sites/1PBrocoli/gereco/wpa-gereco/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\nimport App from './App.vue'\nimport './registerServiceWorker'\nimport router from './router'\nimport { VueSignaturePad } from 'vue-signature-pad';\n\nlet app = createApp(App)\napp.config.globalProperties.currIp = 'https://ns3359877.ip-37-187-97.eu'\napp.component(\"VueSignaturePad\", VueSignaturePad);\napp.use(router).mount('#app')\n\nfunction checkDP() {\n\t// Notification.requestPermission().then((permission) => {\n //        console.log(permission);\n //        if (permission === \"granted\") {\n //            const notification = new Notification(\"Test\", { body: \"test notif\" });\n //            console.log(notification);\n //        }\n //    });\n\n    navigator.serviceWorker.register('service-worker.js');\n\tif (Notification.permission === \"granted\") {\n\t    navigator.serviceWorker.ready.then(function(registration) {\n\t      registration.showNotification('Notification with ServiceWorker');\n\t    });\n\t} else {\n\t\t// We need to ask the user for permission\n\t\tNotification.requestPermission().then((permission) => {\n\t\t    console.log(permission);\n\t\t    if (permission === \"granted\") {\n\t\t        navigator.serviceWorker.ready.then(function(registration) {\n\t\t          registration.showNotification('Notification with ServiceWorker');\n\t\t        });\n\t\t    }\n\t\t});\n\t}\n}\nsetInterval(checkDP, 4000);\n\n\n// async function test() {\n// \tconst registration = await navigator.serviceWorker.ready;\n\n// \tif(\"periodicSync\" in registration) {\n// \t\t// Background Periodic Sync functionality\n// \t\tconst periodicSync = registration.periodicSync;\n// \t\tconsole.log(registration);\n// \t}\n// }\n// test();\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAO,yBAAyB;AAChC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,eAAe,QAAQ,mBAAmB;AAEnD,IAAIC,GAAG,GAAGJ,SAAS,CAACC,GAAG,CAAC;AACxBG,GAAG,CAACC,MAAM,CAACC,gBAAgB,CAACC,MAAM,GAAG,mCAAmC;AACxEH,GAAG,CAACI,SAAS,CAAC,iBAAiB,EAAEL,eAAe,CAAC;AACjDC,GAAG,CAACK,GAAG,CAACP,MAAM,CAAC,CAACQ,KAAK,CAAC,MAAM,CAAC;AAE7B,SAASC,OAAOA,CAAA,EAAG;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;;EAEGC,SAAS,CAACC,aAAa,CAACC,QAAQ,CAAC,mBAAmB,CAAC;EACxD,IAAIC,YAAY,CAACC,UAAU,KAAK,SAAS,EAAE;IACvCJ,SAAS,CAACC,aAAa,CAACI,KAAK,CAACC,IAAI,CAAC,UAASC,YAAY,EAAE;MACxDA,YAAY,CAACC,gBAAgB,CAAC,iCAAiC,CAAC;IAClE,CAAC,CAAC;EACN,CAAC,MAAM;IACN;IACAL,YAAY,CAACM,iBAAiB,CAAC,CAAC,CAACH,IAAI,CAAEF,UAAU,IAAK;MAClDM,OAAO,CAACC,GAAG,CAACP,UAAU,CAAC;MACvB,IAAIA,UAAU,KAAK,SAAS,EAAE;QAC1BJ,SAAS,CAACC,aAAa,CAACI,KAAK,CAACC,IAAI,CAAC,UAASC,YAAY,EAAE;UACxDA,YAAY,CAACC,gBAAgB,CAAC,iCAAiC,CAAC;QAClE,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACH;AACD;AACAI,WAAW,CAACb,OAAO,EAAE,IAAI,CAAC;;AAG1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}