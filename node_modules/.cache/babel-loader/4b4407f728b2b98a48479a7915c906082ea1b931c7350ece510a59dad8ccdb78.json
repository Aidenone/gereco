{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { set, get } from 'idb-keyval';\nexport default {\n  name: 'IDBTest',\n  data() {\n    return {\n      verif_ra: false,\n      ville: '',\n      recurrence: [{\n        name: '',\n        email: ''\n      }]\n    };\n  },\n  mounted() {\n    this.getFormData();\n    window.addEventListener('beforeunload', this.saveFormData);\n  },\n  beforeUnmount() {\n    window.removeEventListener('beforeunload', this.saveFormData);\n  },\n  methods: {\n    async saveFormData() {\n      //Data from table + form\n      var result = this.$data;\n      //To avoid cloning error\n      result = JSON.stringify(result);\n      var test = JSON.parse(result);\n      await set('VG-xxx-7', test);\n    },\n    async getFormData() {\n      const savedData = await get('VG-xxx-7');\n      console.log(savedData);\n      if (savedData) {\n        this.ville = savedData.ville;\n        this.recurrence = savedData.recurrence;\n        this.verif_ra = savedData.verif_ra;\n      }\n    },\n    addItem() {\n      this.recurrence.push({\n        name: \"\",\n        email: \"\"\n      });\n      this.saveFormData();\n    },\n    removeItem(index) {\n      this.recurrence.splice(index, 1);\n    },\n    submitForm() {\n      this.getFormData();\n    }\n  }\n};","map":{"version":3,"mappings":";AAoBA,SAASA,GAAG,EAAEC,GAAE,QAAS,YAAY;AAErC,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE,KAAK;MACfC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE,CACV;QAACJ,IAAI,EAAE,EAAE;QAAEK,KAAK,EAAE;MAAE,CAAC;IAEzB,CAAC;EACH,CAAC;EACDC,OAAO,GAAG;IACR,IAAI,CAACC,WAAW,EAAE;IAClBC,MAAM,CAACC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAACC,YAAY,CAAC;EAC5D,CAAC;EACDC,aAAa,GAAG;IACdH,MAAM,CAACI,mBAAmB,CAAC,cAAc,EAAE,IAAI,CAACF,YAAY,CAAC;EAC/D,CAAC;EACDG,OAAO,EAAE;IACP,MAAMH,YAAY,GAAG;MACvB;MACA,IAAII,MAAK,GAAI,IAAI,CAACC,KAAK;MACvB;MACAD,MAAK,GAAIE,IAAI,CAACC,SAAS,CAACH,MAAM,CAAC;MAC/B,IAAII,IAAG,GAAIF,IAAI,CAACG,KAAK,CAACL,MAAM,CAAC;MAE7B,MAAMhB,GAAG,CAAC,UAAU,EAAEoB,IAAI,CAAC;IACzB,CAAC;IACD,MAAMX,WAAW,GAAG;MAClB,MAAMa,SAAQ,GAAI,MAAMrB,GAAG,CAAC,UAAU,CAAC;MACvCsB,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;MACtB,IAAIA,SAAS,EAAE;QACb,IAAI,CAACjB,KAAI,GAAIiB,SAAS,CAACjB,KAAK;QAC5B,IAAI,CAACC,UAAS,GAAIgB,SAAS,CAAChB,UAAU;QACtC,IAAI,CAACF,QAAO,GAAIkB,SAAS,CAAClB,QAAQ;MACpC;IACF,CAAC;IACDqB,OAAO,GAAG;MACR,IAAI,CAACnB,UAAU,CAACoB,IAAI,CAAC;QAAExB,IAAI,EAAE,EAAE;QAAEK,KAAK,EAAE;MAAE,CAAC,CAAC;MAC5C,IAAI,CAACK,YAAY,EAAE;IACrB,CAAC;IACDe,UAAU,CAACC,KAAK,EAAE;MAChB,IAAI,CAACtB,UAAU,CAACuB,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAClC,CAAC;IACDE,UAAU,GAAG;MACX,IAAI,CAACrB,WAAW,EAAE;IACpB;EACF;AACF,CAAC","names":["set","get","name","data","verif_ra","ville","recurrence","email","mounted","getFormData","window","addEventListener","saveFormData","beforeUnmount","removeEventListener","methods","result","$data","JSON","stringify","test","parse","savedData","console","log","addItem","push","removeItem","index","splice","submitForm"],"sourceRoot":"","sources":["/Users/antoinelucas/Sites/1PBrocoli/gereco/wpa-gereco/src/components/IDBTest.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"submitForm\">\n      Ville:\n      <input type=\"text\" v-model=\"this.ville\" @input=\"saveFormData\" />\n\n      Verification RA:\n      <input type=\"checkbox\" v-model=\"this.verif_ra\" @input=\"saveFormData\">\n\n    <tr v-for=\"(item, index) in recurrence\" :key=\"index\">\n\t\t<td><input type=\"text\" v-model=\"item.name\" @input=\"saveFormData\" /></td>\n\t\t<td><input type=\"text\" v-model=\"item.email\" @input=\"saveFormData\" /></td>\n\t\t<td>\n\t\t<button @click=\"removeItem(index)\">Supprimer</button>\n\t\t</td>\n\t</tr>\n\t<button @click=\"addItem\">Ajouter une ligne</button>\n  </form>\n</template>\n\n<script>\nimport { set, get } from 'idb-keyval';\n\nexport default {\n  name: 'IDBTest',\n  data() {\n    return {\n      verif_ra: false,\n      ville: '',\n      recurrence: [\n        {name: '', email: ''},\n      ],\n    };\n  },\n  mounted() {\n    this.getFormData();\n    window.addEventListener('beforeunload', this.saveFormData);\n  },\n  beforeUnmount() {\n    window.removeEventListener('beforeunload', this.saveFormData);\n  },\n  methods: {\n    async saveFormData() {\n\t\t//Data from table + form\n\t\tvar result = this.$data;\n\t\t//To avoid cloning error\n\t\tresult = JSON.stringify(result);\n\t\tvar test = JSON.parse(result);\n\n\t\tawait set('VG-xxx-7', test);\n    },\n    async getFormData() {\n      const savedData = await get('VG-xxx-7');\n      console.log(savedData);\n      if (savedData) {\n        this.ville = savedData.ville;\n        this.recurrence = savedData.recurrence;\n        this.verif_ra = savedData.verif_ra;\n      }\n    },\n    addItem() {\n      this.recurrence.push({ name: \"\", email: \"\"});\n      this.saveFormData();\n    },\n    removeItem(index) {\n      this.recurrence.splice(index, 1);\n    },\n    submitForm() {\n      this.getFormData();\n    },\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}