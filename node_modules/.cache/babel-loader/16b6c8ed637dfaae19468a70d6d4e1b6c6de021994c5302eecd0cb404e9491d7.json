{"ast":null,"code":"import { set, get } from 'idb-keyval';\nexport default {\n  name: 'IDBTest',\n  data() {\n    return {\n      appartements: [{\n        num: '',\n        bat: '',\n        etage: '',\n        porte: '',\n        suivi: ''\n      }]\n    };\n  },\n  mounted() {\n    this.getFormData();\n    window.addEventListener('beforeunload', this.saveFormData);\n  },\n  beforeUnmount() {\n    window.removeEventListener('beforeunload', this.saveFormData);\n  },\n  methods: {\n    async saveFormData(occ) {\n      occ = occ + 1;\n      //Data from table + form\n      var result = this.$data;\n      //To avoid cloning error\n      result = JSON.stringify(result);\n      var test = JSON.parse(result);\n      if (isNaN(occ)) {\n        console.log(\"Save tout\");\n        let i = 1;\n        while (get('VG-xxx-' + i)) {\n          await set('VG-xxx-' + i, test[i]);\n          i = i + 1;\n        }\n      } else {\n        console.log(occ);\n        await set('VG-xxx-' + occ, test);\n      }\n    },\n    async getFormData() {\n      const savedData = await get('VG-xxx');\n      console.log(savedData);\n      if (savedData) {\n        this.appartements = savedData.appartements;\n        console.log(savedData.appartements[0]);\n      }\n    },\n    addItem() {\n      //mettre type en arg\n      // this['inter_'+type].push({ name: \"\", email: \"\"});\n      this.this.saveFormData();\n    },\n    removeItem(index, type) {\n      this['inter_' + type].splice(index, 1);\n      this.saveFormData();\n    },\n    submitForm() {\n      this.getFormData();\n    }\n  }\n};","map":{"version":3,"mappings":"AAqCA,SAASA,GAAG,EAAEC,GAAE,QAAS,YAAY;AAErC,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,IAAI,GAAG;IACL,OAAO;MACLC,YAAY,EAAE,CACZ;QAACC,GAAG,EAAE,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAE,CAAC;IAEvD,CAAC;EACH,CAAC;EACDC,OAAO,GAAG;IACR,IAAI,CAACC,WAAW,EAAE;IAClBC,MAAM,CAACC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAACC,YAAY,CAAC;EAC5D,CAAC;EACDC,aAAa,GAAG;IACdH,MAAM,CAACI,mBAAmB,CAAC,cAAc,EAAE,IAAI,CAACF,YAAY,CAAC;EAC/D,CAAC;EACDG,OAAO,EAAE;IACP,MAAMH,YAAY,CAACI,GAAG,EAAE;MAC1BA,GAAE,GAAIA,GAAG,GAAC,CAAC;MACX;MACA,IAAIC,MAAK,GAAI,IAAI,CAACC,KAAK;MACvB;MACAD,MAAK,GAAIE,IAAI,CAACC,SAAS,CAACH,MAAM,CAAC;MAC/B,IAAII,IAAG,GAAIF,IAAI,CAACG,KAAK,CAACL,MAAM,CAAC;MAC7B,IAAIM,KAAK,CAACP,GAAG,CAAC,EAAE;QACfQ,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;QACxB,IAAIC,IAAI,CAAC;QACT,OAAM3B,GAAG,CAAC,SAAS,GAAC2B,CAAC,CAAC,EAAE;UACvB,MAAM5B,GAAG,CAAC,SAAS,GAAC4B,CAAC,EAAEL,IAAI,CAACK,CAAC,CAAC,CAAC;UAC/BA,IAAIA,IAAI,CAAC;QACV;MACD,OAAO;QACNF,OAAO,CAACC,GAAG,CAACT,GAAG,CAAC;QAChB,MAAMlB,GAAG,CAAC,SAAS,GAACkB,GAAG,EAAEK,IAAI,CAAC;MAC/B;IACE,CAAC;IACD,MAAMZ,WAAW,GAAG;MAClB,MAAMkB,SAAQ,GAAI,MAAM5B,GAAG,CAAC,QAAQ,CAAC;MACrCyB,OAAO,CAACC,GAAG,CAACE,SAAS,CAAC;MACtB,IAAIA,SAAS,EAAE;QACb,IAAI,CAACzB,YAAW,GAAIyB,SAAS,CAACzB,YAAY;QAC1CsB,OAAO,CAACC,GAAG,CAACE,SAAS,CAACzB,YAAY,CAAC,CAAC,CAAC,CAAC;MACxC;IACF,CAAC;IACD0B,OAAO,GAAG;MACZ;MACA;MACA,IAAI,CACJC,IAAI,CAACjB,YAAY,EAAE;IACjB,CAAC;IACDkB,UAAU,CAACC,KAAK,EAAEC,IAAI,EAAE;MAC1B,IAAI,CAAC,QAAQ,GAACA,IAAI,CAAC,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MACpC,IAAI,CAACnB,YAAY,EAAE;IACjB,CAAC;IACDsB,UAAU,GAAG;MACX,IAAI,CAACzB,WAAW,EAAE;IACpB;EACF;AACF,CAAC","names":["set","get","name","data","appartements","num","bat","etage","porte","suivi","mounted","getFormData","window","addEventListener","saveFormData","beforeUnmount","removeEventListener","methods","occ","result","$data","JSON","stringify","test","parse","isNaN","console","log","i","savedData","addItem","this","removeItem","index","type","splice","submitForm"],"sourceRoot":"","sources":["/Users/antoinelucas/Sites/1PBrocoli/gereco/wpa-gereco/src/components/IDBTest.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"submitForm\">\n\tAppartements : <br>\n\t<table>\n\t\t<tr>\n\t\t\t<th>N°</th>\n\t\t\t<th>Bât.</th>\n\t\t\t<th>Esc.</th>\n\t\t\t<th>Et.</th>\n\t\t\t<th>Suivi</th>\n\t\t\t<th>Modifier</th>\n\t\t</tr>\n\t\t<tr v-for=\"(item, index) in appartements\" :key=\"index\">\n\t\t\t<td><input type=\"text\" v-model=\"item.num\" @input=\"saveFormData(index)\" /></td>\n\t\t\t<td><input type=\"text\" v-model=\"item.bat\" @input=\"saveFormData(index)\" /></td>\n\t\t\t<td><input type=\"text\" v-model=\"item.etage\" @input=\"saveFormData(index)\" /></td>\n\t\t\t<td><input type=\"text\" v-model=\"item.porte\" @input=\"saveFormData(index)\" /></td>\n\t\t\t<td>\n\t\t\t\t<select v-model=\"item.suivi\" @change=\"saveFormData(index)\">\n\t\t\t\t\t<option value=\"Occupant\">Occupant</option>\n\t\t\t\t\t<option value=\"Abs.\">Abs.</option>\n\t\t\t\t\t<option value=\"Abs. x2\">Abs. x2</option>\n\t\t\t\t\t<option value=\"Gardien\">Gardien</option>\n\t\t\t\t\t<option value=\"CLE\">CLE</option>\n\t\t\t\t\t<option value=\"RO\">RO</option>\n\t\t\t\t\t<option value=\"Avisé\">Avisé</option>\n\t\t\t\t</select>\n\t\t\t</td>\n\t\t\t<td><a href=\"#\">--></a></td>\n\t\t</tr>\n      </table>\n    \n\t<button @click=\"addItem\">+</button>\n  </form>\n</template>\n\n<script>\nimport { set, get } from 'idb-keyval';\n\nexport default {\n  name: 'IDBTest',\n  data() {\n    return {\n      appartements: [\n        {num: '', bat: '', etage: '', porte: '', suivi: ''},\n      ],\n    };\n  },\n  mounted() {\n    this.getFormData();\n    window.addEventListener('beforeunload', this.saveFormData);\n  },\n  beforeUnmount() {\n    window.removeEventListener('beforeunload', this.saveFormData);\n  },\n  methods: {\n    async saveFormData(occ) {\n\t\tocc = occ+1;\n\t\t//Data from table + form\n\t\tvar result = this.$data;\n\t\t//To avoid cloning error\n\t\tresult = JSON.stringify(result);\n\t\tvar test = JSON.parse(result);\n\t\tif (isNaN(occ)) {\n\t\t\tconsole.log(\"Save tout\");\n\t\t\tlet i = 1; \n\t\t\twhile(get('VG-xxx-'+i)) {\n\t\t\t\tawait set('VG-xxx-'+i, test[i]);\n\t\t\t\ti = i + 1;\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log(occ);\n\t\t\tawait set('VG-xxx-'+occ, test);\n\t\t}\n    },\n    async getFormData() {\n      const savedData = await get('VG-xxx');\n      console.log(savedData);\n      if (savedData) {\n        this.appartements = savedData.appartements;\n        console.log(savedData.appartements[0]);\n      }\n    },\n    addItem() {\n\t\t//mettre type en arg\n\t\t// this['inter_'+type].push({ name: \"\", email: \"\"});\n\t\tthis.\n\t\tthis.saveFormData();\n    },\n    removeItem(index, type) {\n\t\tthis['inter_'+type].splice(index, 1);\n\t\tthis.saveFormData();\n    },\n    submitForm() {\n      this.getFormData();\n    },\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}