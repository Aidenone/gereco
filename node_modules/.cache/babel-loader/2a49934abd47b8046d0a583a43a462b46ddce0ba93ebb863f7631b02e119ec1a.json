{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport { get, clear, set, del, keys, entries } from 'idb-keyval';\nexport default {\n  name: 'HelloWorld',\n  data() {\n    return {\n      resp: '',\n      currIp: this.currIp\n    };\n  },\n  methods: {\n    logout() {\n      if (confirm(\"Êtes-vous sûr de vouloir vous déconnecter ? Vous perdrez votre avancement sur les tâches en cours.\")) {\n        clear();\n        this.$router.push('/login/');\n      }\n    }\n  },\n  async mounted() {\n    let current_tech = await get('current_tech');\n    if (typeof current_tech == 'undefined') {\n      this.$router.push('/login/');\n    } else {\n      axios.get(this.currIp + '/my_missions?tech_id=' + current_tech).then(response => {\n        this.resp = response.data;\n        this.resp.forEach(async function (element) {\n          var id = element.Item_id;\n          var type = element.Item_type;\n          element = JSON.stringify(element);\n          var data = JSON.parse(element);\n\n          //del old tasks\n          const ks = await keys();\n          for (const k of ks) {\n            if (k.toString().includes(\"-task\")) {\n              del(k);\n            }\n          }\n\n          //set new tasks\n          await set(type + '-' + id + '-task', data);\n        });\n\n        //ajouter les missions dans le cache\n        //mettre la date de création dans le cache pour la suppression\n        //Changer les trucs de base si l'inter existe deja\n        // trucs de base : date todo / reference si existe / adresse\n        // console.log(this.resp);\n      });\n\n      //get tasks from cache\n      var data_tasks = await entries();\n      for (const task of data_tasks) {\n        console.log(task.key);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AACA,OAAOA,KAAI,MAAO,OAAM;AACxB,SAASC,GAAG,EAAEC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,OAAM,QAAS,YAAY;AAEhE,eAAe;EACXC,IAAI,EAAE,YAAY;EAClBC,IAAI,GAAG;IACH,OAAO;MACHC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,IAAI,CAACA;IACjB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,MAAM,GAAG;MACL,IAAGC,OAAO,CAAC,oGAAoG,CAAC,EAAC;QAC7GX,KAAK,EAAE;QACP,IAAI,CAACY,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC;MAChC;IACJ;EACJ,CAAC;EACD,MAAMC,OAAM,GAAK;IACb,IAAIC,YAAW,GAAI,MAAMhB,GAAG,CAAC,cAAc,CAAC;IAC5C,IAAI,OAAOgB,YAAW,IAAK,WAAW,EAAE;MACpC,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC;IAChC,OAAO;MACHf,KAAK,CAACC,GAAG,CAAC,IAAI,CAACS,MAAM,GAAC,uBAAuB,GAACO,YAAY,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QAC3E,IAAI,CAACV,IAAG,GAAIU,QAAQ,CAACX,IAAI;QACzB,IAAI,CAACC,IAAI,CAACW,OAAO,CAAC,gBAAeC,OAAO,EAAE;UACtC,IAAIC,EAAC,GAAID,OAAO,CAACE,OAAO;UACxB,IAAIC,IAAG,GAAIH,OAAO,CAACI,SAAS;UAC5BJ,OAAM,GAAIK,IAAI,CAACC,SAAS,CAACN,OAAO,CAAC;UACjC,IAAIb,IAAG,GAAIkB,IAAI,CAACE,KAAK,CAACP,OAAO,CAAC;;UAE9B;UACA,MAAMQ,EAAC,GAAI,MAAMxB,IAAI,EAAE;UACvB,KAAK,MAAMyB,KAAKD,EAAE,EAAE;YAChB,IAAIC,CAAC,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,OAAO,CAAC,EAAE;cAChC5B,GAAG,CAAC0B,CAAC,CAAC;YACV;UACJ;;UAEA;UACA,MAAM3B,GAAG,CAACqB,IAAI,GAAC,GAAG,GAACF,EAAE,GAAC,OAAO,EAAEd,IAAI,CAAC;QACxC,CAAC,CAAC;;QAEF;QACI;QACA;QACI;QACR;MACJ,CAAC,CAAC;;MAEF;MACI,IAAIyB,UAAS,GAAI,MAAM3B,OAAO,EAAE;MAChC,KAAK,MAAM4B,IAAG,IAAKD,UAAU,EAAE;QAC3BE,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,GAAG,CAAC;MACzB;IACR;EACJ;AACJ,CAAC","names":["axios","get","clear","set","del","keys","entries","name","data","resp","currIp","methods","logout","confirm","$router","push","mounted","current_tech","then","response","forEach","element","id","Item_id","type","Item_type","JSON","stringify","parse","ks","k","toString","includes","data_tasks","task","console","log","key"],"sourceRoot":"","sources":["/Users/antoinelucas/Sites/1PBrocoli/gereco/wpa-gereco/src/components/HelloWorld.vue"],"sourcesContent":["<script>\nimport axios from \"axios\"\nimport { get, clear, set, del, keys, entries } from 'idb-keyval';\n\nexport default {\n    name: 'HelloWorld',\n    data() {\n        return {\n            resp: '',\n            currIp: this.currIp\n        };\n    },\n    methods: {\n        logout() {\n            if(confirm(\"Êtes-vous sûr de vouloir vous déconnecter ? Vous perdrez votre avancement sur les tâches en cours.\")){\n                clear();\n                this.$router.push('/login/');\n            }\n        }\n    },\n    async mounted () {\n        let current_tech = await get('current_tech');\n        if (typeof current_tech == 'undefined') {\n            this.$router.push('/login/');\n        } else {\n            axios.get(this.currIp+'/my_missions?tech_id='+current_tech).then((response) => {\n                this.resp = response.data;\n                this.resp.forEach(async function(element) {\n                    var id = element.Item_id;\n                    var type = element.Item_type;\n                    element = JSON.stringify(element);\n                    var data = JSON.parse(element);\n\n                    //del old tasks\n                    const ks = await keys();\n                    for (const k of ks) {\n                        if (k.toString().includes(\"-task\")) {\n                            del(k);\n                        }\n                    }\n\n                    //set new tasks\n                    await set(type+'-'+id+'-task', data);\n                });\n\n                //ajouter les missions dans le cache\n                    //mettre la date de création dans le cache pour la suppression\n                    //Changer les trucs de base si l'inter existe deja\n                        // trucs de base : date todo / reference si existe / adresse\n                // console.log(this.resp);\n            });\n\n            //get tasks from cache\n                var data_tasks = await entries();\n                for (const task of data_tasks) {\n                    console.log(task.key);\n                }\n        }\n    },\n};\n\n</script>\n\n<template>\n\n<img src=\"../assets/logo-gereco.svg\" style=\"width: 60px; float: left; margin: 10px;\">\n<div style=\"display: contents;\" @click=\"logout()\"><img src=\"../assets/logout.png\" class=\"logout-button\"></div>\n<div style='float: right; color: black; position: relative; margin-right: 7px; top: 23px; border: 1px solid black; padding: 4px; font-size: 13px;'><a href=\"/#/new_dp\" style=\"color: black;\">+ un dépannage</a></div>\n  <div class=\"hello\">\n    <div class=\"color-legend\">\n        <div style=\"background: #82C0CC;\">Visite Générale</div>\n        <div style=\"background: #f69159;\">Dépannage</div>\n        <div style=\"background: #f6b553;\">Visite Hebdo</div>\n    </div>\n    <li v-for=\"(item, index) in resp\" v-bind:key=\"index\">\n        <div class=\"planning_elem dp_elem\" v-if=\"item.Item_type === 'DP'\">\n            <div>\n                <div id=\"planning_date\">{{ item.Evt_dtDebut }}</div>\n                <div id=\"planning_type\">{{ item.Item_type }}</div>\n            </div>\n            <div>\n                <div id=\"planning_ref\">Référence :<br> {{ item.Item_reference }}</div>\n                <div id=\"planning_adress\">{{ item.Imm_1_adr }}<br>{{ item.Imm_CP}} - {{ item.Imm_ville }}</div>\n            </div>\n            <div id=\"planning_object\">Objet : {{ item.DP_objetIntervention }}</div>\n            <router-link v-bind:to=\"{ name: 'DPForm', query: { item_id: item.Item_id }}\"><div class=\"buttonLink\">Effectuer l'intervention <img src=\"../assets/fleche_blanc.svg\"></div></router-link>\n        </div>\n\n        <div class=\"planning_elem vg_elem\" v-if=\"item.Item_type === 'VG'\">\n            <div>\n                <div id=\"planning_date\">{{ item.Evt_dtDebut }}</div>\n                <div id=\"planning_type\">{{ item.Item_type }}</div>\n            </div>\n            <div>\n                <div id=\"planning_ref\">Référence :<br> {{ item.Item_reference }}</div>\n                <div id=\"planning_adress\">{{ item.Imm_1_adr }}<br>{{ item.Imm_CP}} - {{ item.Imm_ville }}</div>\n            </div>\n            <router-link v-bind:to=\"{ name: 'IDBTest', query: { item_id: item.Item_id }}\"><div class=\"buttonLink\">Effectuer l'intervention <img src=\"../assets/fleche_blanc.svg\"></div></router-link>\n        </div>\n\n        <div class=\"planning_elem vh_elem\" v-if=\"item.Item_type === 'VH'\">\n            <div>\n                <div id=\"planning_date\">{{ item.Evt_dtDebut }}</div>\n                <div id=\"planning_type\">{{ item.Item_type }}</div>\n            </div>\n            <div>\n                <div id=\"planning_ref\">Référence :<br> {{ item.Item_reference }}</div>\n                <div id=\"planning_adress\">{{ item.Imm_1_adr }}<br>{{ item.Imm_CP}} - {{ item.Imm_ville }}</div>\n            </div>\n            <router-link v-bind:to=\"{ name: 'vh', query: { item_id: item.Item_id }}\"><div class=\"buttonLink\">Effectuer l'intervention <img src=\"../assets/fleche_blanc.svg\"></div></router-link>\n        </div>\n    </li>\n  </div>\n</template>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n    .home {\n        margin-top: 0px !important;\n    }\n    .logout-button {\n        width: 20px;\n        position: relative;\n        top: 27px;\n        left: 55px;\n    }\n    .color-legend {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n        width: 97%;\n        margin: auto;\n        margin-bottom: 15px;\n    }\n    .color-legend > div {\n        width: 30%;\n        text-align: center;\n        font-size: 15px;\n        padding: 5px;\n        color: black;\n    }\n    li {\n       list-style-type: none; \n    }\n    .vg_elem.planning_elem {\n        background: #81c0cc !important;\n    } .vh_elem.planning_elem {\n        background: #c2bdb9 !important;\n    } .planning_elem {\n        width: 95%;\n        margin: auto;\n        margin-top: 20px;\n        background: #f69159;\n        color: black;\n        padding: 5px;\n        border-radius: 10px;\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        font-size: 13px;\n        padding: 8px;\n    } .planning_elem > div {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n        width: 100%;\n        margin-bottom: 9px;\n    }\n    #planning_ref, #planning_adress {\n        text-align: left;\n    }\n    #planning_date, #planning_type {\n        font-weight: bold;\n    }\n    #planning_object {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    #planning_ref, #planning_adress {\n        width: 50%;\n    }\n    #planning_button {\n        color: black;\n    }\n\n    .vg_elem .buttonLink {\n        color: #81c0cc !important;\n    } .vg_elem .buttonLink img {\n        background: #81c0cc !important;\n    }\n\n    .vh_elem .buttonLink {\n        color: #c2bdb9 !important;\n    } .vh_elem .buttonLink img {\n        background: #c2bdb9 !important;\n    }\n\n    .buttonLink {\n        border-radius: 17px;\n        background: white;\n        text-align: left;\n        width: 240px;\n        margin: auto;\n        font-weight: bold;\n        margin-top: 5px;\n        margin-bottom: 5px;\n        height: 35px;\n        display: flex;\n        padding: 0px 5px 0 10px;\n        align-items: center;\n        justify-content: space-between;\n        color: #f69159;\n    } .buttonLink img {\n        height: 14px;\n        width: 14px;\n        border-radius: 100px;\n        padding: 6px;\n        background: #f69159;\n    }\n    a {\n        text-decoration: none;\n    }\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}