{"ast":null,"code":"import { withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, \" test \", 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"mappings":";;uBACCA,oBAEO;IAFAC,QAAM,wDAAUC,mDAAU;KAAE,QAEnC","names":["_createElementBlock","onSubmit","$options"],"sourceRoot":"","sources":["/Users/antoinelucas/Sites/1PBrocoli/gereco/wpa-gereco/src/components/VGInter.vue"],"sourcesContent":["<template>\n\t<form @submit.prevent=\"submitForm\">\n\t\ttest\n\t</form>\n</template>\n\n<script>\nimport { set, get } from 'idb-keyval';\n\nexport default {\n\tname: 'VGInter',\n\tdata() {\n\t\treturn {\n\t\t\tvg_id: '',\n\t\t\tappartements: [\n\t\t\t\t//ajouter tous les champs\n\t\t\t\t{num: '', bat: '', etage: '', porte: '', suivi: ''},\n\t\t\t],\n\t\t};\n\t},\n\tmounted() {\n\t\tlet uri = window.location.href.split('?');\n\t\tlet vars = uri[1].split('&');\n\t\tlet getVars = {};\n\t\tlet tmp = '';\n\t\tvars.forEach(function(v) {\n\t\ttmp = v.split('=');\n\t\tif(tmp.length == 2)\n\t\t\tgetVars[tmp[0]] = tmp[1];\n\t\t});\n\t\tlet item_id = getVars.item_id;\n\t\tthis.vg_occ = item_id;\n\t\tconsole.log(this.vg_id);\n\t},\n  // beforeUnmount() {\n  //   window.removeEventListener('beforeunload', this.saveFormData);\n  // },\n  methods: {\n    async saveFormData(occ) {\n\t\tocc = occ+1;\n\t\t//Data from table + form\n\t\tvar result = this.$data;\n\t\t//To avoid cloning error\n\t\tresult = JSON.stringify(result);\n\t\tvar test = JSON.parse(result);\n\t\tconsole.log(\"occ : \"+occ);\n\t\tif (isNaN(occ)) {\n\t\t\tlet i = 0;\n\t\t\twhile(await get('VG-xxx-'+i)) {\n\t\t\t\tawait set('VG-xxx-'+i, test.appartements[i-1]);\n\t\t\t\tconsole.log(\"test\");\n\t\t\t\ti = i + 1;\n\t\t\t}\n\t\t} else {\n\t\t\tawait set('VG-xxx-'+occ, test.appartements[occ-1]);\n\t\t}\n    },\n    async getFormData() {\n\t\tlet i = 1;\n\t\tlet data = [];\n\t\tif(await get('VG-xxx-'+i) !== undefined) {\n\t\t\twhile(await get('VG-xxx-'+i) !== undefined) {\n\t\t\t\tlet savedData = await get('VG-xxx-'+i);\n\t\t\t\tdata[i-1] = savedData;\n\t\t\t\ti = i + 1;\n\t\t\t}\n\t\t\tthis.appartements = data;\n\t\t}\n    },\n    addItem() {\n\t\t//mettre type en arg\n\t\t// this['inter_'+type].push({ name: \"\", email: \"\"});\n\t\tlet nbr_line = document.querySelectorAll('.vg-line').length + 1;\n\t\tset('VG-xxx-'+nbr_line, {num: '', bat: '', etage: '', porte: '', suivi: ''});\n\t\tthis.saveFormData();\n    },\n    removeItem(index, type) {\n\t\tthis['inter_'+type].splice(index, 1);\n\t\tthis.saveFormData();\n    },\n    submitForm() {\n      this.getFormData();\n    },\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}