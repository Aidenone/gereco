{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport './registerServiceWorker';\nimport router from './router';\nimport { VueSignaturePad } from 'vue-signature-pad';\nlet app = createApp(App);\napp.config.globalProperties.currIp = 'https://ns3359877.ip-37-187-97.eu';\napp.component(\"VueSignaturePad\", VueSignaturePad);\napp.use(router).mount('#app');\n\n// function checkDP() {\n// \tNotification.requestPermission().then((permission) => {\n//         console.log(permission);\n//         if (permission === \"granted\") {\n//             const notification = new Notification(\"Test\", { body: \"test notif\" });\n//             console.log(notification);\n//         }\n//     });\n// }\n// setInterval(checkDP, 4000);\nconst registration = navigator.serviceWorker.ready;\nif (\"periodicSync\" in registration) {\n  // Background Periodic Sync functionality\n  const periodicSync = registration.periodicSync;\n  console.log(periodicSync);\n}","map":{"version":3,"names":["createApp","App","router","VueSignaturePad","app","config","globalProperties","currIp","component","use","mount","registration","navigator","serviceWorker","ready","periodicSync","console","log"],"sources":["/Users/antoinelucas/Sites/1PBrocoli/gereco/wpa-gereco/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\nimport App from './App.vue'\nimport './registerServiceWorker'\nimport router from './router'\nimport { VueSignaturePad } from 'vue-signature-pad';\n\nlet app = createApp(App)\napp.config.globalProperties.currIp = 'https://ns3359877.ip-37-187-97.eu'\napp.component(\"VueSignaturePad\", VueSignaturePad);\napp.use(router).mount('#app')\n\n// function checkDP() {\n// \tNotification.requestPermission().then((permission) => {\n//         console.log(permission);\n//         if (permission === \"granted\") {\n//             const notification = new Notification(\"Test\", { body: \"test notif\" });\n//             console.log(notification);\n//         }\n//     });\n// }\n// setInterval(checkDP, 4000);\nconst registration = navigator.serviceWorker.ready;\n\nif (\"periodicSync\" in registration) {\n  // Background Periodic Sync functionality\n  const periodicSync = registration.periodicSync;\n  console.log(periodicSync);\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAO,yBAAyB;AAChC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,eAAe,QAAQ,mBAAmB;AAEnD,IAAIC,GAAG,GAAGJ,SAAS,CAACC,GAAG,CAAC;AACxBG,GAAG,CAACC,MAAM,CAACC,gBAAgB,CAACC,MAAM,GAAG,mCAAmC;AACxEH,GAAG,CAACI,SAAS,CAAC,iBAAiB,EAAEL,eAAe,CAAC;AACjDC,GAAG,CAACK,GAAG,CAACP,MAAM,CAAC,CAACQ,KAAK,CAAC,MAAM,CAAC;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,YAAY,GAAGC,SAAS,CAACC,aAAa,CAACC,KAAK;AAElD,IAAI,cAAc,IAAIH,YAAY,EAAE;EAClC;EACA,MAAMI,YAAY,GAAGJ,YAAY,CAACI,YAAY;EAC9CC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;AAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}