{"ast":null,"code":"/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log('App is being served from cache by a service worker.\\n' + 'For more details, visit https://goo.gl/AFskqB');\n      function checkDP() {\n        Notification.requestPermission().then(permission => {\n          console.log(permission);\n          if (permission === \"granted\") {\n            // const notification = new Notification(\"Test\", { body: \"test notif\" });\n            // console.log(notification);\n          }\n        });\n      }\n      setInterval(checkDP, 4000);\n    },\n    registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated() {\n      console.log('New content is available; please refresh.');\n    },\n    offline() {\n      console.log('No internet connection found. App is running in offline mode.');\n    },\n    error(error) {\n      console.error('Error during service worker registration:', error);\n    }\n  });\n}","map":{"version":3,"names":["register","process","env","NODE_ENV","BASE_URL","ready","console","log","checkDP","Notification","requestPermission","then","permission","setInterval","registered","cached","updatefound","updated","offline","error"],"sources":["/Users/antoinelucas/Sites/1PBrocoli/gereco/wpa-gereco/src/registerServiceWorker.js"],"sourcesContent":["/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      );\n\n      function checkDP() {\n       Notification.requestPermission().then((permission) => {\n              console.log(permission);\n              if (permission === \"granted\") {\n                  // const notification = new Notification(\"Test\", { body: \"test notif\" });\n                  // console.log(notification);\n              }\n          });\n      }\n      setInterval(checkDP, 4000);\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n"],"mappings":"AAAA;;AAEA,SAASA,QAAQ,QAAQ,yBAAyB;AAElD,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCH,QAAQ,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACE,QAAS,mBAAkB,EAAE;IACnDC,KAAK,GAAI;MACPC,OAAO,CAACC,GAAG,CACT,uDAAuD,GACvD,+CAA+C,CAChD;MAED,SAASC,OAAO,GAAG;QAClBC,YAAY,CAACC,iBAAiB,EAAE,CAACC,IAAI,CAAEC,UAAU,IAAK;UAC/CN,OAAO,CAACC,GAAG,CAACK,UAAU,CAAC;UACvB,IAAIA,UAAU,KAAK,SAAS,EAAE;YAC1B;YACA;UAAA;QAER,CAAC,CAAC;MACN;MACAC,WAAW,CAACL,OAAO,EAAE,IAAI,CAAC;IAC5B,CAAC;IACDM,UAAU,GAAI;MACZR,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IACpD,CAAC;IACDQ,MAAM,GAAI;MACRT,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;IACzD,CAAC;IACDS,WAAW,GAAI;MACbV,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C,CAAC;IACDU,OAAO,GAAI;MACTX,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;IAC1D,CAAC;IACDW,OAAO,GAAI;MACTZ,OAAO,CAACC,GAAG,CAAC,+DAA+D,CAAC;IAC9E,CAAC;IACDY,KAAK,CAAEA,KAAK,EAAE;MACZb,OAAO,CAACa,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;IACnE;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}