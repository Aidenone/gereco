{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport { get } from 'idb-keyval';\nexport default {\n  name: 'HelloWorld',\n  data() {\n    return {\n      showAlert: false,\n      alertMessage: '',\n      onLine: navigator.onLine,\n      showBackOnline: false,\n      resp: '',\n      currIp: this.currIp\n    };\n  },\n  methods: {\n    updateOnlineStatus() {\n      this.onLine = navigator.onLine;\n      if (!this.onLine) {\n        this.showTemporaryAlert('Connexion Internet perdue !');\n      }\n    },\n    showTemporaryAlert(message) {\n      this.alertMessage = message;\n      this.showAlert = true;\n      setTimeout(() => {\n        this.showAlert = false;\n      }, 3000);\n    }\n  },\n  watch: {\n    onLine(v) {\n      if (v) {\n        this.showBackOnline = true;\n        setTimeout(() => {\n          this.showBackOnline = false;\n          this.showTemporaryAlert('Connexion Internet rétablie !');\n        }, 1000);\n      }\n    }\n  },\n  async mounted() {\n    let current_tech = await get('current_tech');\n    if (typeof current_tech == 'undefined') {\n      this.$router.push('/login/');\n    } else {\n      axios.get(this.currIp + '/my_missions?tech_id=' + current_tech).then(response => {\n        this.resp = response.data;\n        console.log(this.resp);\n      });\n    }\n    window.addEventListener('online', this.updateOnlineStatus);\n    window.addEventListener('offline', this.updateOnlineStatus);\n  },\n  beforeUnmount() {\n    window.removeEventListener('online', this.updateOnlineStatus);\n    window.removeEventListener('offline', this.updateOnlineStatus);\n  }\n};","map":{"version":3,"mappings":";AACA,OAAOA,KAAI,MAAO,OAAM;AACxB,SAASC,GAAE,QAAS,YAAY;AAEhC,eAAe;EACXC,IAAI,EAAE,YAAY;EAClBC,IAAI,GAAG;IACH,OAAO;MACHC,SAAS,EAAE,KAAK;MAChBC,YAAY,EAAE,EAAE;MAChBC,MAAM,EAAEC,SAAS,CAACD,MAAM;MACxBE,cAAc,EAAE,KAAK;MACrBC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,IAAI,CAACA;IACjB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,kBAAkB,GAAG;MACjB,IAAI,CAACN,MAAK,GAAIC,SAAS,CAACD,MAAM;MAC9B,IAAI,CAAC,IAAI,CAACA,MAAM,EAAE;QACd,IAAI,CAACO,kBAAkB,CAAC,6BAA6B,CAAC;MAC1D;IACJ,CAAC;IACDA,kBAAkB,CAACC,OAAO,EAAE;MACxB,IAAI,CAACT,YAAW,GAAIS,OAAO;MAC3B,IAAI,CAACV,SAAQ,GAAI,IAAI;MAErBW,UAAU,CAAC,MAAM;QACf,IAAI,CAACX,SAAQ,GAAI,KAAK;MACxB,CAAC,EAAE,IAAI,CAAC;IACZ;EACJ,CAAC;EACDY,KAAK,EAAE;IACHV,MAAM,CAACW,CAAC,EAAE;MACN,IAAIA,CAAC,EAAE;QACH,IAAI,CAACT,cAAa,GAAI,IAAI;QAC1BO,UAAU,CAAC,MAAM;UACb,IAAI,CAACP,cAAa,GAAI,KAAK;UAC3B,IAAI,CAACK,kBAAkB,CAAC,+BAA+B,CAAC;QAC5D,CAAC,EAAE,IAAI,CAAC;MACZ;IACJ;EACJ,CAAC;EACD,MAAMK,OAAM,GAAK;IACb,IAAIC,YAAW,GAAI,MAAMlB,GAAG,CAAC,cAAc,CAAC;IAC5C,IAAI,OAAOkB,YAAW,IAAK,WAAW,EAAE;MACpC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC;IAChC,OAAO;MACHrB,KAAK,CAACC,GAAG,CAAC,IAAI,CAACS,MAAM,GAAC,uBAAuB,GAACS,YAAY,CAAC,CAACG,IAAI,CAAEC,QAAQ,IAAK;QAC3E,IAAI,CAACd,IAAG,GAAIc,QAAQ,CAACpB,IAAI;QACzBqB,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,IAAI,CAAC;MAC1B,CAAC,CAAC;IACN;IAEAiB,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACf,kBAAkB,CAAC;IAC1Dc,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACf,kBAAkB,CAAC;EAC/D,CAAC;EACDgB,aAAa,GAAG;IACZF,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACjB,kBAAkB,CAAC;IAC7Dc,MAAM,CAACG,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAACjB,kBAAkB,CAAC;EAClE;AACJ,CAAC","names":["axios","get","name","data","showAlert","alertMessage","onLine","navigator","showBackOnline","resp","currIp","methods","updateOnlineStatus","showTemporaryAlert","message","setTimeout","watch","v","mounted","current_tech","$router","push","then","response","console","log","window","addEventListener","beforeUnmount","removeEventListener"],"sourceRoot":"","sources":["/Users/antoinelucas/Sites/1PBrocoli/gereco/wpa-gereco/src/components/HelloWorld.vue"],"sourcesContent":["<script>\nimport axios from \"axios\"\nimport { get } from 'idb-keyval';\n\nexport default {\n    name: 'HelloWorld',\n    data() {\n        return {\n            showAlert: false,\n            alertMessage: '',\n            onLine: navigator.onLine,\n            showBackOnline: false,\n            resp: '',\n            currIp: this.currIp\n        };\n    },\n    methods: {\n        updateOnlineStatus() {\n            this.onLine = navigator.onLine;\n            if (!this.onLine) {\n                this.showTemporaryAlert('Connexion Internet perdue !');\n            }\n        },\n        showTemporaryAlert(message) {\n            this.alertMessage = message;\n            this.showAlert = true;\n\n            setTimeout(() => {\n              this.showAlert = false;\n            }, 3000);\n        }\n    },\n    watch: {\n        onLine(v) {\n            if (v) {\n                this.showBackOnline = true;\n                setTimeout(() => {\n                    this.showBackOnline = false;\n                    this.showTemporaryAlert('Connexion Internet rétablie !');\n                }, 1000);\n            }\n        }\n    },\n    async mounted () {\n        let current_tech = await get('current_tech');\n        if (typeof current_tech == 'undefined') {\n            this.$router.push('/login/');\n        } else {\n            axios.get(this.currIp+'/my_missions?tech_id='+current_tech).then((response) => {\n                this.resp = response.data;\n                console.log(this.resp);\n            });\n        }\n\n        window.addEventListener('online', this.updateOnlineStatus);\n        window.addEventListener('offline', this.updateOnlineStatus);\n    },\n    beforeUnmount() {\n        window.removeEventListener('online', this.updateOnlineStatus);\n        window.removeEventListener('offline', this.updateOnlineStatus);\n    }\n};\n\n</script>\n\n<template>\n\n<div>\n    <div v-if=\"showAlert\" class=\"alert\">{{ alertMessage }}</div>\n</div>\n\n<img src=\"../assets/logo-gereco.svg\" style=\"width: 60px; float: left; margin: 10px;\">\n<div style='float: right; position: relative; margin-right: 7px; top: 23px; border: 1px solid black; padding: 4px; font-size: 13px;'><a href=\"/#/new_dp\">+ un dépannage</a></div>\n  <div class=\"hello\">\n    <div class=\"color-legend\">\n        <div style=\"background: #82C0CC;\">Visite Générale</div>\n        <div style=\"background: #f69159;\">Dépannage</div>\n        <div style=\"background: #f6b553;\">Visite Hebdo</div>\n    </div>\n    <li v-for=\"(item, index) in resp\" v-bind:key=\"index\">\n        <div class=\"planning_elem dp_elem\" v-if=\"item.Item_type === 'DP'\">\n            <div>\n                <div id=\"planning_date\">{{ item.Evt_dtDebut }}</div>\n                <div id=\"planning_type\">{{ item.Item_type }}</div>\n            </div>\n            <div>\n                <div id=\"planning_ref\">Référence :<br> {{ item.Item_reference }}</div>\n                <div id=\"planning_adress\">{{ item.Imm_1_adr }}<br>{{ item.Imm_CP}} - {{ item.Imm_ville }}</div>\n            </div>\n            <div id=\"planning_object\">Objet : {{ item.DP_objetIntervention }}</div>\n            <router-link v-bind:to=\"{ name: 'DPForm', query: { item_id: item.Item_id }}\"><div class=\"buttonLink\">Effectuer l'intervention <img src=\"../assets/fleche_blanc.svg\"></div></router-link>\n        </div>\n\n        <div class=\"planning_elem vg_elem\" v-if=\"item.Item_type === 'VG'\">\n            <div>\n                <div id=\"planning_date\">{{ item.Evt_dtDebut }}</div>\n                <div id=\"planning_type\">{{ item.Item_type }}</div>\n            </div>\n            <div>\n                <div id=\"planning_ref\">Référence :<br> {{ item.Item_reference }}</div>\n                <div id=\"planning_adress\">{{ item.Imm_1_adr }}<br>{{ item.Imm_CP}} - {{ item.Imm_ville }}</div>\n            </div>\n            <router-link v-bind:to=\"{ name: 'IDBTest', query: { item_id: item.Item_id }}\"><div class=\"buttonLink\">Effectuer l'intervention <img src=\"../assets/fleche_blanc.svg\"></div></router-link>\n        </div>\n\n        <div class=\"planning_elem vh_elem\" v-if=\"item.Item_type === 'VH'\">\n            <div>\n                <div id=\"planning_date\">{{ item.Evt_dtDebut }}</div>\n                <div id=\"planning_type\">{{ item.Item_type }}</div>\n            </div>\n            <div>\n                <div id=\"planning_ref\">Référence :<br> {{ item.Item_reference }}</div>\n                <div id=\"planning_adress\">{{ item.Imm_1_adr }}<br>{{ item.Imm_CP}} - {{ item.Imm_ville }}</div>\n            </div>\n            <router-link v-bind:to=\"{ name: 'vh', query: { item_id: item.Item_id }}\"><div class=\"buttonLink\">Effectuer l'intervention <img src=\"../assets/fleche_blanc.svg\"></div></router-link>\n        </div>\n    </li>\n  </div>\n</template>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n\n    /* style message connexion */\n\n    .alert {\n      background-color: yellow;\n      padding: 10px;\n      border: 1px solid black;\n      position: fixed;\n      top: 10px;\n      left: 10px;\n      z-index: 9999;\n      opacity: 1;\n      transition: opacity 0.3s ease-in-out;\n    }\n\n    .alert.hide {\n      opacity: 0;\n    }\n\n    .home {\n        margin-top: 0px !important;\n    }\n    .color-legend {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n        width: 97%;\n        margin: auto;\n        margin-bottom: 15px;\n    }\n    .color-legend > div {\n        width: 30%;\n        text-align: center;\n        font-size: 15px;\n        padding: 5px;\n        color: black;\n    }\n    li {\n       list-style-type: none; \n    }\n    .vg_elem.planning_elem {\n        background: #81c0cc !important;\n    } .vh_elem.planning_elem {\n        background: #c2bdb9 !important;\n    } .planning_elem {\n        width: 95%;\n        margin: auto;\n        margin-top: 20px;\n        background: #f69159;\n        color: black;\n        padding: 5px;\n        border-radius: 10px;\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        font-size: 13px;\n        padding: 8px;\n    } .planning_elem > div {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n        width: 100%;\n        margin-bottom: 9px;\n    }\n    #planning_ref, #planning_adress {\n        text-align: left;\n    }\n    #planning_date, #planning_type {\n        font-weight: bold;\n    }\n    #planning_object {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    #planning_ref, #planning_adress {\n        width: 50%;\n    }\n    #planning_button {\n        color: black;\n    }\n\n    .vg_elem .buttonLink {\n        color: #81c0cc !important;\n    } .vg_elem .buttonLink img {\n        background: #81c0cc !important;\n    }\n\n    .vh_elem .buttonLink {\n        color: #c2bdb9 !important;\n    } .vh_elem .buttonLink img {\n        background: #c2bdb9 !important;\n    }\n\n    .buttonLink {\n        border-radius: 17px;\n        background: white;\n        text-align: left;\n        width: 240px;\n        margin: auto;\n        font-weight: bold;\n        margin-top: 5px;\n        margin-bottom: 5px;\n        height: 35px;\n        display: flex;\n        padding: 0px 5px 0 10px;\n        align-items: center;\n        justify-content: space-between;\n        color: #f69159;\n    } .buttonLink img {\n        height: 14px;\n        width: 14px;\n        border-radius: 100px;\n        padding: 6px;\n        background: #f69159;\n    }\n    a {\n        text-decoration: none;\n    }\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}