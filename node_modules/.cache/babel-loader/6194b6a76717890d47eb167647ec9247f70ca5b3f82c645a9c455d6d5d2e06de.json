{"ast":null,"code":"import { set, get } from 'idb-keyval';\nexport default {\n  name: 'IDBTest',\n  data() {\n    return {\n      formData: {\n        name: '',\n        email: ''\n      }\n    };\n  },\n  mounted() {\n    this.getFormData();\n  },\n  methods: {\n    async saveFormData() {\n      await set('formData', this.formData);\n    },\n    async getFormData() {\n      const savedData = await get('formData');\n      if (savedData) {\n        this.formData = savedData;\n      }\n    },\n    submitForm() {\n      // Soumettre le formulaire\n    }\n  }\n};","map":{"version":3,"mappings":"AAeA,SAASA,GAAG,EAAEC,GAAE,QAAS,YAAY;AAErC,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRF,IAAI,EAAE,EAAE;QACRG,KAAK,EAAE;MACT;IACF,CAAC;EACH,CAAC;EACDC,OAAO,GAAG;IACR,IAAI,CAACC,WAAW,EAAE;EACpB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAY,GAAG;MACnB,MAAMT,GAAG,CAAC,UAAU,EAAE,IAAI,CAACI,QAAQ,CAAC;IACtC,CAAC;IACD,MAAMG,WAAW,GAAG;MAClB,MAAMG,SAAQ,GAAI,MAAMT,GAAG,CAAC,UAAU,CAAC;MACvC,IAAIS,SAAS,EAAE;QACb,IAAI,CAACN,QAAO,GAAIM,SAAS;MAC3B;IACF,CAAC;IACDC,UAAU,GAAG;MACX;IAAA;EAEJ;AACF,CAAC","names":["set","get","name","data","formData","email","mounted","getFormData","methods","saveFormData","savedData","submitForm"],"sourceRoot":"","sources":["/Users/antoinelucas/Sites/1PBrocoli/gereco/wpa-gereco/src/components/IDBTest.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"submitForm\">\n    <label>\n      Nom:\n      <input type=\"text\" v-model=\"formData.name\" @input=\"saveFormData\" />\n    </label>\n    <label>\n      Adresse email:\n      <input type=\"email\" v-model=\"formData.email\" @input=\"saveFormData\" />\n    </label>\n    <button type=\"submit\">Envoyer</button>\n  </form>\n</template>\n\n<script>\nimport { set, get } from 'idb-keyval';\n\nexport default {\n  name: 'IDBTest',\n  data() {\n    return {\n      formData: {\n        name: '',\n        email: '',\n      },\n    };\n  },\n  mounted() {\n    this.getFormData();\n  },\n  methods: {\n    async saveFormData() {\n      await set('formData', this.formData);\n    },\n    async getFormData() {\n      const savedData = await get('formData');\n      if (savedData) {\n        this.formData = savedData;\n      }\n    },\n    submitForm() {\n      // Soumettre le formulaire\n    },\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}