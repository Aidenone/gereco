{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, Fragment as _Fragment } from \"vue\";\nimport _imports_0 from '../assets/logo-gereco.svg';\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  style: {\n    \"width\": \"60px\",\n    \"margin\": \"10px\"\n  }\n}, null, -1);\nconst _hoisted_2 = {\n  class: \"login\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Connexion :\", -1);\nconst _hoisted_4 = {\n  key: 0,\n  style: {\n    \"color\": \"red\"\n  }\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"nom\"\n}, \"Nom :\", -1);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"Mot de passe :\", -1);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"input\", {\n  class: \"input_button\",\n  type: \"submit\",\n  value: \"VALIDER\"\n}, null, -1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.getFormValues && $options.getFormValues(...args), [\"prevent\"]))\n  }, [_hoisted_3, this.erreur ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"Login ou Mot de passe invalide\")) : _createCommentVNode(\"\", true), _hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"nom\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.nom = $event)\n  }, null, 512), [[_vModelText, $data.nom]]), _hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event)\n  }, null, 512), [[_vModelText, $data.password]]), _hoisted_7], 32), _createElementVNode(\"div\", {\n    onClick: _cache[3] || (_cache[3] = $event => $options.deleteData()),\n    class: \"delete-button\"\n  }, \"Effacer les données\")])], 64);\n}","map":{"version":3,"mappings":";OA2CKA,UAA+B;gCAApCC,oBAAwE;EAAnEC,GAA+B,EAA/BF,UAA+B;EAACG,KAAkC,EAAlC;IAAA;IAAA;EAAA;;;EAC/BC,KAAK,EAAC;AAAO;gCAEhBH,oBAAoB,YAAhB,aAAW;;;EACSE,KAAmB,EAAnB;IAAA;EAAA;;gCACxBF,oBAA8B;EAAvBI,GAAG,EAAC;AAAK,GAAC,OAAK;gCAEtBJ,oBAA4C;EAArCI,GAAG,EAAC;AAAU,GAAC,gBAAc;gCAEpCJ,oBAA0D;EAAnDG,KAAK,EAAC,cAAc;EAACE,IAAI,EAAC,QAAQ;EAACC,KAAK,EAAC;;;6DATnDC,UAAwE,EACvEP,oBAYM,OAZNQ,UAYM,GAXLR,oBAQO;IARAS,QAAM,wDAAUC,yDAAa;MACnCC,UAAoB,OACJC,MAAM,kBAAtBC,oBAAgF,OAAhFC,UAAgF,EAApC,gCAA8B,oCAC1EC,UAA8B,kBAC9Bf,oBAA4C;IAArCK,IAAI,EAAC,MAAM;IAACW,IAAI,EAAC,KAAK;+DAAUC,SAAG;gCAAHA,SAAG,KAC1CC,UAA4C,kBAC5ClB,oBAA0D;IAAnDK,IAAI,EAAC,UAAU;IAACW,IAAI,EAAC,UAAU;+DAAUC,cAAQ;gCAARA,cAAQ,KACxDE,UAA0D,QAGrDnB,oBAA0E;IAApEoB,OAAK,sCAAEV,mBAAU;IAAIP,KAAK,EAAC;KAAgB,qBAAmB","names":["_imports_0","_createElementVNode","src","style","class","for","type","value","_hoisted_1","_hoisted_2","onSubmit","$options","_hoisted_3","erreur","_createElementBlock","_hoisted_4","_hoisted_5","name","$data","_hoisted_6","_hoisted_7","onClick"],"sourceRoot":"","sources":["/Users/antoinelucas/Sites/1PBrocoli/gereco/wpa-gereco/src/components/Login.vue"],"sourcesContent":["<script>\nimport axios from \"axios\"\nimport { set, clear } from 'idb-keyval';\n\nexport default {\n    name: 'LoginForm',\n    data() {\n        return {\n            resp: '',\n            nom: '',\n            password: '',\n            erreur: false\n        };\n    },\n    mounted () {\n    },\n    methods: {\n\t\tgetFormValues() {\n\t\t\tconst content = {\n\t\t\t\t\t\t\t\tlogin: this.nom,\n\t\t\t\t\t\t\t\tpassword: this.password,\n\t\t\t\t\t\t\t};\n\t\t\taxios.post(this.currIp+\"/login\", content).then((response) => {\n\t\t\t\tif (typeof response.data['Tech_id'] !== 'undefined') {\n\t\t\t\t\tset('current_tech', response.data['Tech_id']);\n\t\t\t\t\tthis.$router.push('/');\n\t\t\t\t} else {\n\t\t\t\t\tthis.erreur = true;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n        deleteData() {\n            if(confirm(\"Voulez-vous supprimer toutes les données de l'application, vos tâches en cours ne seront plus sauvegardées ?\")){\n                clear();\n                this.$router.push('/');\n            }\n        }\n\t}\n};\n\n</script>\n\n<template>\n<img src=\"../assets/logo-gereco.svg\" style=\"width: 60px; margin: 10px;\">\n\t<div class=\"login\">\n\t\t<form @submit.prevent=\"getFormValues\">\n\t\t\t<h2>Connexion :</h2>\n\t\t\t<div v-if=\"this.erreur\" style=\"color: red;\">Login ou Mot de passe invalide</div>\n\t\t\t<label for=\"nom\">Nom :</label>\n\t\t\t<input type=\"text\" name=\"nom\" v-model=\"nom\">\n\t\t\t<label for=\"password\">Mot de passe :</label>\n\t\t\t<input type=\"password\" name=\"password\" v-model=\"password\">\n\t\t\t<input class=\"input_button\" type=\"submit\" value=\"VALIDER\">\n\t\t</form>\n\n        <div @click=\"deleteData()\" class=\"delete-button\">Effacer les données</div>\n\t</div>\n</template>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n    .delete-button {\n        text-decoration: underline;\n        margin-top: 40px;\n        cursor: pointer;\n    }\n\t.login form {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\t.login .input_button {\n\t\tmargin-top: 30px;\n\t}\n    .home {\n        margin-top: 0px !important;\n    }\n    .color-legend {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n        width: 97%;\n        margin: auto;\n        margin-bottom: 15px;\n    }\n    .color-legend > div {\n        width: 30%;\n        text-align: center;\n        font-size: 15px;\n        padding: 5px;\n        color: black;\n    }\n    li {\n       list-style-type: none; \n    }\n    .vg_elem.planning_elem {\n        background: #81c0cc !important;\n    } .vh_elem.planning_elem {\n        background: #c2bdb9 !important;\n    } .planning_elem {\n        width: 95%;\n        margin: auto;\n        margin-top: 20px;\n        background: #f69159;\n        color: black;\n        padding: 5px;\n        border-radius: 10px;\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        font-size: 13px;\n        padding: 8px;\n    } .planning_elem > div {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n        width: 100%;\n        margin-bottom: 9px;\n    }\n    #planning_ref, #planning_adress {\n        text-align: left;\n    }\n    #planning_date, #planning_type {\n        font-weight: bold;\n    }\n    #planning_object {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    #planning_ref, #planning_adress {\n        width: 50%;\n    }\n    #planning_button {\n        color: black;\n    }\n\n    .vg_elem .buttonLink {\n        color: #81c0cc !important;\n    } .vg_elem .buttonLink img {\n        background: #81c0cc !important;\n    }\n\n    .vh_elem .buttonLink {\n        color: #c2bdb9 !important;\n    } .vh_elem .buttonLink img {\n        background: #c2bdb9 !important;\n    }\n\n    .buttonLink {\n        border-radius: 17px;\n        background: white;\n        text-align: left;\n        width: 240px;\n        margin: auto;\n        font-weight: bold;\n        margin-top: 5px;\n        margin-bottom: 5px;\n        height: 35px;\n        display: flex;\n        padding: 0px 5px 0 10px;\n        align-items: center;\n        justify-content: space-between;\n        color: #f69159;\n    } .buttonLink img {\n        height: 14px;\n        width: 14px;\n        border-radius: 100px;\n        padding: 6px;\n        background: #f69159;\n    }\n    a {\n        text-decoration: none;\n    }\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}